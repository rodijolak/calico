<project name="CalicoClient" default="run" basedir=".">
	<description>Calico Client Application</description>

	<property name="src" location="src" />
	<property name="build" location="bin" />
	<property name="dist" location="dist" />
	<property name="webstart" location="webstart" />
	<property name="docs" location="docs" />
	<property name="libs" location="lib" />
	<property name="plugins" location="plugins" />
	<property name="icons" location="icons" />
	<tstamp />


	<property name="default.heapsize" value="600M" />
	
	
	<property name="pfr.release" value="trunk" />
	<property name="distdir" location="${dist}/calicoclient-${pfr.release}" />
	<property name="webstartdir" location="${webstart}/calicoclient-webstart" />	
	<property name="clientKeystore.dname" value='"CN=wss, OU=orgUnit, O=company2, L=city, ST=state, C=us"'/>

	<target name="init">
		<mkdir dir="${build}" />

		<available property="distalreadybuilt" file="${distdir}/calicoclient.jar" type="file" />
		<available property="keyalreadyGenerated" file="${webstart}/calico.keystore" type="file" />
	</target>
	
	<target name="rebuild-dist">
		<antcall target="clean-dist" />
		<antcall target="dist" />
	</target>

	<!-- CALICO -->
	<target name="compile-calico" depends="init, build-icons">
		<javac srcdir="${src}" destdir="${build}" includes="calico/**/*.java" debug="on" debuglevel="lines,vars,source" deprecation="on" compiler="javac1.6" source="1.6" target="1.6">
			<classpath>
				<fileset dir="${libs}"><include name="*.jar"/></fileset>
			</classpath>
		</javac>
	</target>

	
		
	<!-- Build the JSON libraries-->
	<!--
	<target name="compile-json" depends="init">
		<javac srcdir="${src}" debuglevel="lines,vars,source" destdir="${build}" includes="org/json/**/*.java" />
	</target>
	
	<target name="json-dar" depends="compile-json">
		<jar destfile="json.jar" basedir="${build}" compress="true"  includes="org/json/**/*.*">
			<manifest>
				<attribute name="Created-By" value="${user.name}"/>
			</manifest>
		</jar>		
	</target>
	-->
	

	<!-- cleanup -->
	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${docs}" />
	</target>
	<target name="clean-calico">
		<delete dir="${build}/calico" />
	</target>
	<target name="clean-icons">
		<delete file="${build}/calico_icons.jar" />
	</target>
	
	<target name="clean-dist">
		<delete dir="${dist}" />
	</target>

	<!-- java doc-->
	<target name="docs">
		<mkdir dir="${docs}" />
		<javadoc sourcepath="${src}" destdir="${docs}"/>
	</target>
	
	
	<target name="dist" depends="compile-calico,build-icons" unless="${distalreadybuilt}">
		<mkdir dir="${dist}" />

		<mkdir dir="${distdir}" />

		
		<mkdir dir="${distdir}/libs" />
		<mkdir dir="${distdir}/logs" />
		<mkdir dir="${distdir}/conf" />
		<mkdir dir="${distdir}/plugins" />
		<!-- Copy libs and stuff -->
		<copy todir="${distdir}/libs"><fileset dir="${libs}" includes="*.jar"/></copy>
		
		<!-- Copy libs and stuff -->
		<copy todir="${distdir}/plugins"><fileset dir="${plugins}" includes="*.jar"/></copy>
		
		<!-- Copy config files-->
		<copy todir="${distdir}/conf"><fileset dir="conf" /></copy>
		<copy todir="${build}/calico"><fileset dir="conf" /></copy>
		
		<!-- Make the class path-->
		<manifestclasspath property="temp.cp" jarfile="${distdir}/calicoclient.jar">
			<classpath>
				<fileset dir="${distdir}/libs"><include name="*.jar"/></fileset>
				<fileset dir="${distdir}/plugins"><include name="*.jar"/></fileset>
			</classpath>
		</manifestclasspath>
		
		<tstamp>
			<format property="buildtime" pattern="MM/dd/yyyy hh:mm aa Z" />
		</tstamp>
		
		<tstamp>
			<format property="versionID" pattern="MMddyyyyhhmm" />
		</tstamp>
		
		<echo message="Version number: ${versionID}"/>
		
		<!-- make the jar file -->
		<jar destfile="${distdir}/calicoclient.jar" basedir="${build}" compress="false">
			<manifest>
				<attribute name="Created-By" value="${user.name}"/>
				<attribute name="Main-Class" value="calico.Calico"/>
				<attribute name="Class-Path" value="${temp.cp}" />
				
				<attribute name="Implementation-Vendor" value="University of California, Irvine"/>
				<attribute name="Implementation-Title" value="Calico Client"/>
				<!--<attribute name="Implementation-Version" value="CalicoClient - ${pfr.release} (${buildtime})"/>-->
				<attribute name="Implementation-Version" value="${versionID}"/>
				<attribute name="version-id" value="${versionID}"/>
				<attribute name="Manifest-Version" value="${versionID}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="webstart" depends="dist,genKey">
		<delete dir="${webstart}/signed" />
		<mkdir dir="${webstart}/signed" />
		<mkdir dir="${webstart}/signed/libs" />
		<mkdir dir="${webstart}/signed/plugins" />

		<signjar destDir="${webstart}/signed"
		    alias="CalicoClient" keystore="${webstart}/calico.keystore"
		    storepass="calico56"
		    preservelastmodified="true">
		  <path>
		    <fileset dir="${distdir}" includes="**/*.jar" />
		  </path>
		</signjar>
		
	</target>
	
	<target name="genKey" unless="${keyalreadyGenerated}">
		<delete dir="${webstart}" />
		<mkdir dir="${webstart}" />
		<exec executable="keytool">
			<arg value="-genkey"/>
			<arg value="-alias" />
			<arg value="CalicoClient" />
			<arg value="-keypass"/>
			<arg value="calico56"/>
			<arg value="-keystore"/>
			<arg value="${webstart}/calico.keystore"/>
			<arg value="-storepass"/>
			<arg value="calico56"/>
			<arg value="-dname"/>
			<arg value="CN=UCI Calico, OU=UCI-Software Design and Collaboration Laboratory, O=Department of Informatics, L=Irvine, ST=California,C=US"/>
		</exec>
		
	</target>
	
	
	<target name="build-icons" depends="init">
		<!--<jar destfile="${build}/silk_icons.jar" basedir="icons" includes="calico/iconsets/silk/**/*.*" />
		<jar destfile="${build}/fugue_icons.jar" basedir="icons" includes="calico/iconsets/fugue/**/*.*" />-->
		<jar destfile="${libs}/calico_icons.jar" basedir="icons" includes="calico/iconsets/calico/**/*.*" />
	</target>
	
	<!--
	<target name="build-conf" depends="init">
		<jar destfile="${libs}/calico_conf.jar" basedir="conf" includes="*.*" />
	</target>
	-->

	<!-- DISTRIBUTABLE FILE -->
	<target name="buildzip" depends="compile-calico,build-icons" >
		<delete dir="ziptemp" />
		<mkdir dir="ziptemp" />
		<mkdir dir="ziptemp/conf" />

		<copy todir="ziptemp/conf">
			<fileset dir="conf"/>
		</copy>

		<copy file="${build}/calico_icons.jar" todir="ziptemp" />
		<copy file="${libs}/piccolo.jar" todir="ziptemp" />
		<copy file="${libs}/piccolox.jar" todir="ziptemp" />
		<copy file="${libs}/fastutil-5.1.5.jar" todir="ziptemp" />
		<copy file="${libs}/dsiutils-1.0.7.jar" todir="ziptemp" />
		<copy file="${libs}/log4j-1.2.15.jar" todir="ziptemp" />
		<copy file="${libs}/jpen-2.jar" todir="ziptemp" />
		<copy file="${libs}/commons-logging.jar" todir="ziptemp" />
		
		
		<jar destfile="ziptemp/calico.jar" basedir="${build}">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="calico.Calico"/>
				<attribute name="Class-Path" value="piccolo.jar piccolox.jar calico_icons.jar fastutil-5.1.5.jar dsiutils-1.0.7.jar log4j-1.2.15.jar commons-logging.jar jpen-2.jar"/>
			</manifest>
		</jar>
		<delete file="calico.zip" />
		<zip destfile="calico.zip" basedir="ziptemp" />
	</target>

	<!-- Run the JAR file -->
	<target name="run" depends="dist" description="Runs the jar file">
		<java jar="${distdir}/calicoclient.jar" dir="${distdir}" fork="true" maxmemory="${default.heapsize}">
			<jvmarg value="-Xmx${default.heapsize}" />
			<jvmarg value="-Xms${default.heapsize}" />
		</java>
	</target>
	
	<target name="run-debug" depends="dist" description="Runs the jar file">
			<java jar="${distdir}/calicoclient.jar" dir="${distdir}" fork="true" maxmemory="${default.heapsize}">
				<jvmarg value="-Xmx${default.heapsize}" />
				<jvmarg value="-Xdebug"/>
				<jvmarg value="-Xrunjdwp:transport=dt_socket,address=10434,server=y,suspend=n"/>
			</java>
	</target>
	
	<target name="run-stresstest" depends="dist" description="Runs the jar file">
			<java jar="${distdir}/calicoclient.jar" dir="${distdir}" fork="true" maxmemory="${default.heapsize}">
				<jvmarg value="-Xmx${default.heapsize}" />
				<arg value="-stresstest"/>
				<arg value="-ipaddress"/>
				<arg value="127.0.0.1"/>
				<arg value="-port"/>
				<arg value="27000"/>
				<arg value="-stinterval"/>
				<arg value="1000"/>
				<arg value="-resw"/>
				<arg value="800"/>
				<arg value="-resh"/>
				<arg value="600"/>
			</java>	
	</target>



<!--
/tags/
/tags/REL<NUMBERS>/
    /tags/REL<NUMBERS>/source - the sourcecode dump
    /tags/REL<NUMBERS>/CHANGELOG - the changelog (File)
    /tags/REL<NUMBERS>/files - the built files

    /SPREL == special release (not shown to public)

	PROPERTIES: pfr.release

	 -->
	<target name="prep-for-release" depends="dist">
		
		<!-- Make a ZIP file -->
		<zip destfile="../calicoclient-${pfr.release}.zip" basedir="${dist}" />

		<!-- Make the TAR -->
		<tar destfile="calico.tar" basedir="${dist}" />
		
		<gzip src="calico.tar" destfile="../calicoclient-${pfr.release}.tar.gz" />
		<bzip2 src="calico.tar" destfile="../calicoclient-${pfr.release}.tar.bz2" />

	</target>
	

</project>
